---
# tasks file for bbaassssiiee.artifactory


- name: 'verify java -version'
  action: shell /usr/bin/java -version
  register: java
  changed_when: no
  tags:
    - verify

- assert:
    that:
      - "'version' in java.stderr"

- name: install prerequesites
  command: yum install -y openssl

- name: 'create user to run artifactory'
  user: name={{artifactory_username}} home=/opt/artifactory/ shell=/bin/bash system=true

- name: 'verify presence of artifactory'
  stat: path="/opt/artifactory/artifactory-{{artifactory_version}}/webapps/artifactory.war"
  register: jarfile

- name: 'verify presence of artifactory_file'
  stat: path=/tmp/{{artifactory_file}}
  register: download

- name: 'download artifactory'
  get_url: url={{artifactory_url}} dest=/tmp/{{artifactory_file}}
  retries: 3
  when: not download.stat.exists

- name: 'unzip artifactory'
  command: unzip -o  /tmp/{{artifactory_file}} -d /opt/artifactory
  when: not jarfile.stat.exists

- name: 'verify if an update is needed'
  shell: "ls -1d /opt/artifactory/artifactory-{{artifactory_license}}-* | grep -v artifactory-{{artifactory_license}}-{{artifactory_version}}"
  failed_when: false
  changed_when: false
  register: previous

- name: 'stop artifactory before upgrade'
  service: name=artifactory state=stopped
  when: previous.stdout

- name: 'move artifactory data folder'
  shell: mv {{ previous.stdout }}/data /opt/artifactory/artifactory-{{artifactory_license}}-{{artifactory_version}}
  notify: restart artifactory
  when: previous.stdout

- name: 'remove previous artifactory'
  file: dest={{ previous.stdout }} state=absent
  when: previous.stdout

#- name: 'verify presence of artifactory download'
#  stat: path=/tmp/{{artifactory_file}}
#  register: artifactory_download

#- name: 'cleanup artifactory download'
#  file: dest=/tmp/{{artifactory_file}} state=absent
#  when: artifactory_download.stat.exists

- name: 'create config dir for artifactory'
  file: dest=/etc/opt/jfrog/artifactory state=directory owner=root mode=0755

- name: 'create configuration file'
  template: src=etc-opt-jfrog-artifactory-default.j2 dest=/etc/opt/jfrog/artifactory/default
                owner=root group=root mode=0644

- name: 'symlink current version'
  file:
    state=link
    dest=/opt/artifactory/artifactory
    src=/opt/artifactory/artifactory-{{artifactory_license}}-{{artifactory_version}}

- name: 'install artifactory as a service'
  command: "{{artifactory_home}}/bin/installService.sh {{artifactory_username}}"
  notify:
    - 'restart artifactory'

- name: 'create deploy script'
  template: src=deploy-file.sh dest=/usr/local/bin/deploy-file.sh
                owner={{ artifactory_user }} group={{ artifactory_user }} mode=0755

- name: 'enable artifactory service'
  service: name=artifactory enabled=true
