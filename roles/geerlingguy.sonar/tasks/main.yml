---
- name: install MySQL-python package 
  yum: name=MySQL-python state=present

- name: Create Sonar mySQL database
  sudo: yes
  mysql_db: >
    name={{ sonar_mysql_database }}
    login_host={{sonar_mysql_host}}
    login_password={{sonar_database_hostname_pass}}
    login_user={{sonar_database_main_username}}
    encoding=utf8
    state=present


- name: Create a sonar user.
  mysql_user: name={{ sonar_mysql_username }} host={{ sonar_host_name }} login_host={{sonar_mysql_host}} password={{sonar_mysql_password}} login_user={{sonar_database_main_username}} login_password={{sonar_database_hostname_pass}} priv={{ sonar_mysql_database }}.*:ALL state=present

- name: Download Sonar.
  get_url:
    url: "{{ sonar_download_url }}"
    dest: "{{ workspace }}/{{ sonar_version_directory }}.zip"
#
- name: install unzip package 
  yum: name=unzip state=present


- name: Unzip Sonar.
  unarchive:
    src: "{{ workspace }}/{{ sonar_version_directory }}.zip"
    dest: /usr/local/
    copy: no
    creates: /usr/local/sonar/COPYING

- name: Move Sonar into place.
  shell: >
    mv /usr/local/{{ sonar_version_directory }} /usr/local/sonar
    creates=/usr/local/sonar/COPYING

- include: configure.yml

- name: Add sonar symlinks for service management.
  file:
    src: /usr/local/sonar/bin/linux-x86-64/sonar.sh
    dest: "{{ item }}"
    state: link
  with_items:
    - /usr/bin/sonar
    - /etc/init.d/sonar

- name: Ensure Sonar is running and set to start on boot.
  sudo: yes
  #service: name=sonar state=started enabled=yes
  shell: service sonar start
  ignore_errors: yes

- name: Make sure Sonar is responding on the configured port.
  wait_for: port={{sonar_port}} delay=3 timeout=300
  
- name: plugins | Download and install plugins
  sudo: yes
  get_url:
    url="{{item.url}}"
    dest="{{sonar_ext_dir}}"
  with_items: sonar_plugins
  notify: restart sonar
  when: "sonar_plugins is defined and sonar_plugins | count > 0"
